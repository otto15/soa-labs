
package com.soa.products.rest.adapter.wsdl;

import java.math.BigDecimal;
import java.util.List;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "products", targetNamespace = "http://service.products.soa.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Products {


    /**
     * 
     * @param id
     * @return
     *     returns com.example.consumingwebservice.wsdl.ProductTo
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProductById", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.GetProductById")
    @ResponseWrapper(localName = "getProductByIdResponse", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.GetProductByIdResponse")
    public ProductTo getProductById(
        @WebParam(name = "id", targetNamespace = "")
        long id);

    /**
     * 
     * @return
     *     returns com.example.consumingwebservice.wsdl.ProductTo
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMinPartNumberProduct", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.GetMinPartNumberProduct")
    @ResponseWrapper(localName = "getMinPartNumberProductResponse", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.GetMinPartNumberProductResponse")
    public ProductTo getMinPartNumberProduct();

    /**
     * 
     * @param filterCriteriaList
     * @param filterOperators
     * @param filterValues
     * @param page
     * @param size
     * @param sortCriteriaList
     * @param sortTypeList
     * @return
     *     returns java.util.List<com.example.consumingwebservice.wsdl.ProductTo>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProducts", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.GetProducts")
    @ResponseWrapper(localName = "getProductsResponse", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.GetProductsResponse")
    public List<ProductTo> getProducts(
        @WebParam(name = "page", targetNamespace = "")
        int page,
        @WebParam(name = "size", targetNamespace = "")
        int size,
        @WebParam(name = "sortCriteriaList", targetNamespace = "")
        List<CriteriaTo> sortCriteriaList,
        @WebParam(name = "sortTypeList", targetNamespace = "")
        List<SortTypeTo> sortTypeList,
        @WebParam(name = "filterCriteriaList", targetNamespace = "")
        List<CriteriaTo> filterCriteriaList,
        @WebParam(name = "filterOperators", targetNamespace = "")
        List<FilterOperatorTo> filterOperators,
        @WebParam(name = "filterValues", targetNamespace = "")
        List<String> filterValues);

    /**
     * 
     * @param createPersonRequestTo
     * @return
     *     returns com.example.consumingwebservice.wsdl.CreatePersonResponseTo
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createPerson", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.CreatePerson")
    @ResponseWrapper(localName = "createPersonResponse", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.CreatePersonResponse")
    public CreatePersonResponseTo createPerson(
        @WebParam(name = "createPersonRequestTo", targetNamespace = "")
        CreatePersonRequestTo createPersonRequestTo);

    /**
     * 
     * @param createUpdateProductRequestTo
     * @param id
     */
    @WebMethod
    @RequestWrapper(localName = "updateProductById", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.UpdateProductById")
    @ResponseWrapper(localName = "updateProductByIdResponse", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.UpdateProductByIdResponse")
    public void updateProductById(
        @WebParam(name = "id", targetNamespace = "")
        long id,
        @WebParam(name = "createUpdateProductRequestTo", targetNamespace = "")
        CreateUpdateProductRequestTo createUpdateProductRequestTo);

    /**
     * 
     * @param createUpdateProductRequestTo
     * @return
     *     returns com.example.consumingwebservice.wsdl.CreateProductResponseTo
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createProduct", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.CreateProduct")
    @ResponseWrapper(localName = "createProductResponse", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.CreateProductResponse")
    public CreateProductResponseTo createProduct(
        @WebParam(name = "createUpdateProductRequestTo", targetNamespace = "")
        CreateUpdateProductRequestTo createUpdateProductRequestTo);

    /**
     * 
     * @param id
     */
    @WebMethod
    @RequestWrapper(localName = "deleteProductById", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.DeleteProductById")
    @ResponseWrapper(localName = "deleteProductByIdResponse", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.DeleteProductByIdResponse")
    public void deleteProductById(
        @WebParam(name = "id", targetNamespace = "")
        long id);

    /**
     * 
     * @return
     *     returns com.example.consumingwebservice.wsdl.ProductPriceSumTo
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllProductPricesSum", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.GetAllProductPricesSum")
    @ResponseWrapper(localName = "getAllProductPricesSumResponse", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.GetAllProductPricesSumResponse")
    public ProductPriceSumTo getAllProductPricesSum();

    /**
     * 
     * @param cost
     * @param page
     * @param size
     * @return
     *     returns java.util.List<com.example.consumingwebservice.wsdl.ProductTo>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProductsWithManufacturerCostLessThan", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.GetProductsWithManufacturerCostLessThan")
    @ResponseWrapper(localName = "getProductsWithManufacturerCostLessThanResponse", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.GetProductsWithManufacturerCostLessThanResponse")
    public List<ProductTo> getProductsWithManufacturerCostLessThan(
        @WebParam(name = "cost", targetNamespace = "")
        long cost,
        @WebParam(name = "page", targetNamespace = "")
        int page,
        @WebParam(name = "size", targetNamespace = "")
        int size);

    /**
     * 
     * @param percent
     * @param priceOperation
     */
    @WebMethod
    @RequestWrapper(localName = "updatePricesOfAllProducts", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.UpdatePricesOfAllProducts")
    @ResponseWrapper(localName = "updatePricesOfAllProductsResponse", targetNamespace = "http://service.products.soa.com/", className = "com.example.consumingwebservice.wsdl.UpdatePricesOfAllProductsResponse")
    public void updatePricesOfAllProducts(
        @WebParam(name = "priceOperation", targetNamespace = "")
        PriceOperationTo priceOperation,
        @WebParam(name = "percent", targetNamespace = "")
        BigDecimal percent);

}
