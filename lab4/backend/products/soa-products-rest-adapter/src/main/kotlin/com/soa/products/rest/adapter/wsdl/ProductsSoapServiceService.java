
package com.soa.products.rest.adapter.wsdl;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;

import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.0
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "ProductsSoapServiceService", targetNamespace = "http://service.products.soa.com/", wsdlLocation = "http://localhost:1616/services/products?wsdl")
public class ProductsSoapServiceService
    extends Service
{

    private static final URL PRODUCTSSOAPSERVICESERVICE_WSDL_LOCATION;
    private static final WebServiceException PRODUCTSSOAPSERVICESERVICE_EXCEPTION;
    private static final QName PRODUCTSSOAPSERVICESERVICE_QNAME = new QName("http://service.products.soa.com/", "ProductsSoapServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:1616/services/products?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        PRODUCTSSOAPSERVICESERVICE_WSDL_LOCATION = url;
        PRODUCTSSOAPSERVICESERVICE_EXCEPTION = e;
    }

    public ProductsSoapServiceService() {
        super(__getWsdlLocation(), PRODUCTSSOAPSERVICESERVICE_QNAME);
    }

    public ProductsSoapServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), PRODUCTSSOAPSERVICESERVICE_QNAME, features);
    }

    public ProductsSoapServiceService(URL wsdlLocation) {
        super(wsdlLocation, PRODUCTSSOAPSERVICESERVICE_QNAME);
    }

    public ProductsSoapServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PRODUCTSSOAPSERVICESERVICE_QNAME, features);
    }

    public ProductsSoapServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ProductsSoapServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns Products
     */
    @WebEndpoint(name = "productsPort")
    public Products getProductsPort() {
        return super.getPort(new QName("http://service.products.soa.com/", "productsPort"), Products.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Products
     */
    @WebEndpoint(name = "productsPort")
    public Products getProductsPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://service.products.soa.com/", "productsPort"), Products.class, features);
    }

    private static URL __getWsdlLocation() {
        if (PRODUCTSSOAPSERVICESERVICE_EXCEPTION!= null) {
            throw PRODUCTSSOAPSERVICESERVICE_EXCEPTION;
        }
        return PRODUCTSSOAPSERVICESERVICE_WSDL_LOCATION;
    }

}
